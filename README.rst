FTW Web Policy Generator
========================

``ftw.bob.web`` installation package to provide a webpolicy generator with mr.bob template.

.. contents:: Table of Contents

Installation
------------

.. code:: bash

    $ git clone git@github.com:4teamwork/ftw.bob.web.git
    $ cd ftw.bob.web
    $ python2.7 bootstrap.py
    $ bin/buildout

Generating a new policy package
*******************************

.. code:: bash

    $ bin/create

You only have to answer all the questions and your policy will be created.

Development
-----------

Template Tester
***************

.. code:: bash

    $ scripts/test_template

The generated template would have tests. To be able to run this tests, you have
to generate it first with ``bin/create``, buildout it an run tests for it.
Perhaps you also have to update the workflowdefinition first which will take a lot
of time.

The templatetester is doing the following steps:

- Create the package with the auto package generator
- Run buildout with the package-buildouter
- Update lawgiverworkflows with the workflow-updater
- Rerun the auto package generator to get a package with
  the updated lawgiverworkflow from the workflow updater and rerun buildout
- Run default package tests with ``bin/test``


Autogenerate Package
********************

.. code:: bash

    $ scripts/autogenerate_package

This script generates the package with some default values listed in
the autogenerate_package.ini.

You can use this script if you just want an example package or if you
want to use it to test if the generator is working at all.

Package Buildouter
******************

.. code:: bash

    $ scripts/buildout_package

This script generates an autogenerated package and runs buildout for it.

Lawgiver Workflow Updater
*************************

.. code:: bash

    $ scripts/update_lawgiver_workflow

Use this script if you want to update your template workflow.

The template includes a generated lawgiver workflow.
If you create a new package with bin/create, it will generate
a packagespecific workflow while replacing the mr.bob variables
in the definitions.xml with the package name.

If you do changes on the template, i.e. adding a new package in setup.py,
or if the lawgiver specifiaction.txt has changed, you would
have to recreate the  definitions.xml for the mr.bob template. That means:

- Create a package with bin/create
- Buildout it and start Zope
- Install a plonesite and generate the lawgiver workflow
- Replace all packagenames in the generated definitions.xml to
  mr.bob variables
- Replace the definitions.xml in the template folder with the
  generated definitions.xml

This is a lot of stuff and is error prone.

The script is doing all this in one step for you.


Links
-----

- Github: https://github.com/4teamwork/ftw.bob.web
- Issues: https://github.com/4teamwork/ftw.bob.web/issues
- Continuous integration: https://jenkins.4teamwork.ch/search?q=ftw.bob.web

Copyright
---------

This package is copyright by `4teamwork <http://www.4teamwork.ch/>`_.

``ftw.bob.web`` is licensed under GNU General Public License, version 2.

